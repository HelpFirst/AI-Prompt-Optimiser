To-do:
- add comments to the prompt_engineering (prompt crafting) process
- fix the issues that the generated prompt is enclosed as a json object
- calculate the total cost of the experiments, after finishng running through all the iterations, also display the costt per iteration (inmedialy after each iteration)
- report number of false positives and false negatives into the analysis, and the true positives and the actual postives in teh labelled data
- Allow to pass the variable that wants to be optimised (e.g. f1 score, recall)
- Variable to optimise based on precision/recall into the prompt optimisation step, and also threshold values (e.g. if precision>X, then focus on increasing recall)
- Integrate the code with promptfoo 
- Agentic behaviour
- add something in the prompt about making sure it writes thing in British English

Done:
- dashboard should display the table with all the results
- check if the file evaluate_prompt.py is used in the codebase, if not remove it
- runs name should have the date and time in a human readable format, also allow to pass a name to the run (experiment name) to be included into the run name, as a prefix to the human readable date and time
- Always include Chain of thought as part of the prompt, and include that into the error analysis - make it a requirement
- log the information about the model and temperature and all the other initial paramaters that are used when calling optimise_prompt()
- allows to pass specific comments on each of the steps:
    - into the analysis of false positives
    - into the analysis of false negatives
    - into the analysis of true positives
    - into the analysis of invalid outputs
- DO not append the output after regenaring the prompt, make sure the iteration is done with the formatting instructions.
- Use different models to evaluate the performance of the prompt (e.g. gpt3.5) and for the prompt optimisation step (e.g. gpt4)
-Allow for different output formats. Think about EHU - risk_output = "present" or risk_output = "not present" is what we are evaluating against.
-Estimate number of tokens before starting the experiment - so we know the estimation costs. Ask to proceed when printing the cost?
- Include the metrics of the previous prompt into the prompt optimisation step
- Make sure not to include the wrong formatted outputs into the anlaysis of FP and FN, if included, then included as invalid output formatting, with a prompt mention to make sure that the output format is correct and accoring to the prompt output format instruction.
- Individual risk analysis of each FP and FN
- Break down the analysis into subcategories: FP, FN and TP
- Add formatting categories of the anlaysis
- Add also true positives into the analysis.